module {
  hw.module @fsm10(in %in0 : i1, in %clk : !seq.clock, in %rst : i1) {
    %c0_i4 = hw.constant 0 : i4
    %c1_i4 = hw.constant 1 : i4
    %c2_i4 = hw.constant 2 : i4
    %c3_i4 = hw.constant 3 : i4
    %c4_i4 = hw.constant 4 : i4
    %c5_i4 = hw.constant 5 : i4
    %c6_i4 = hw.constant 6 : i4
    %c7_i4 = hw.constant 7 : i4
    %c-8_i4 = hw.constant -8 : i4
    %c-7_i4 = hw.constant -7 : i4
    %c-6_i4 = hw.constant -6 : i4
    %c-5_i4 = hw.constant -5 : i4
    %state_reg = seq.compreg sym @state_reg %143, %clk : i4  
    %c0_i16 = hw.constant 0 : i16
    %x0 = seq.compreg sym @x0 %138, %clk : i16  
    %c1_i16 = hw.constant 1 : i16
    %true = hw.constant true
    %c0_i16_0 = hw.constant 0 : i16
    %0 = comb.icmp eq %state_reg, %c0_i4 : i4
    %1 = comb.add %x0, %c1_i16 : i16
    %2 = comb.icmp ne %in0, %true : i1
    %3 = comb.icmp eq %state_reg, %c0_i4 : i4
    %4 = comb.icmp eq %in0, %true : i1
    %5 = comb.icmp eq %state_reg, %c0_i4 : i4
    %6 = comb.mux %5, %c0_i4, %state_reg : i4
    %7 = comb.mux %4, %c-5_i4, %c0_i4 : i4
    %8 = comb.and %4, %3 : i1
    %9 = comb.mux %3, %7, %6 : i4
    %10 = comb.mux %2, %c1_i4, %7 : i4
    %11 = comb.and %2, %0 : i1
    %12 = comb.mux %11, %1, %x0 : i16
    %13 = comb.mux %0, %10, %9 : i4
    %14 = comb.icmp eq %state_reg, %c1_i4 : i4
    %15 = comb.add %x0, %c1_i16 : i16
    %16 = comb.icmp ne %in0, %true : i1
    %17 = comb.icmp eq %state_reg, %c1_i4 : i4
    %18 = comb.icmp eq %in0, %true : i1
    %19 = comb.icmp eq %state_reg, %c1_i4 : i4
    %20 = comb.mux %19, %c1_i4, %13 : i4
    %21 = comb.mux %18, %c-5_i4, %c1_i4 : i4
    %22 = comb.and %18, %17 : i1
    %23 = comb.mux %17, %21, %20 : i4
    %24 = comb.mux %16, %c2_i4, %21 : i4
    %25 = comb.and %16, %14 : i1
    %26 = comb.mux %25, %15, %12 : i16
    %27 = comb.mux %14, %24, %23 : i4
    %28 = comb.icmp eq %state_reg, %c2_i4 : i4
    %29 = comb.add %x0, %c1_i16 : i16
    %30 = comb.icmp ne %in0, %true : i1
    %31 = comb.icmp eq %state_reg, %c2_i4 : i4
    %32 = comb.icmp eq %in0, %true : i1
    %33 = comb.icmp eq %state_reg, %c2_i4 : i4
    %34 = comb.mux %33, %c2_i4, %27 : i4
    %35 = comb.mux %32, %c-5_i4, %c2_i4 : i4
    %36 = comb.and %32, %31 : i1
    %37 = comb.mux %31, %35, %34 : i4
    %38 = comb.mux %30, %c3_i4, %35 : i4
    %39 = comb.and %30, %28 : i1
    %40 = comb.mux %39, %29, %26 : i16
    %41 = comb.mux %28, %38, %37 : i4
    %42 = comb.icmp eq %state_reg, %c3_i4 : i4
    %43 = comb.add %x0, %c1_i16 : i16
    %44 = comb.icmp ne %in0, %true : i1
    %45 = comb.icmp eq %state_reg, %c3_i4 : i4
    %46 = comb.icmp eq %in0, %true : i1
    %47 = comb.icmp eq %state_reg, %c3_i4 : i4
    %48 = comb.mux %47, %c3_i4, %41 : i4
    %49 = comb.mux %46, %c-5_i4, %c3_i4 : i4
    %50 = comb.and %46, %45 : i1
    %51 = comb.mux %45, %49, %48 : i4
    %52 = comb.mux %44, %c4_i4, %49 : i4
    %53 = comb.and %44, %42 : i1
    %54 = comb.mux %53, %43, %40 : i16
    %55 = comb.mux %42, %52, %51 : i4
    %56 = comb.icmp eq %state_reg, %c4_i4 : i4
    %57 = comb.add %x0, %c1_i16 : i16
    %58 = comb.icmp ne %in0, %true : i1
    %59 = comb.icmp eq %state_reg, %c4_i4 : i4
    %60 = comb.icmp eq %in0, %true : i1
    %61 = comb.icmp eq %state_reg, %c4_i4 : i4
    %62 = comb.mux %61, %c4_i4, %55 : i4
    %63 = comb.mux %60, %c-5_i4, %c4_i4 : i4
    %64 = comb.and %60, %59 : i1
    %65 = comb.mux %59, %63, %62 : i4
    %66 = comb.mux %58, %c5_i4, %63 : i4
    %67 = comb.and %58, %56 : i1
    %68 = comb.mux %67, %57, %54 : i16
    %69 = comb.mux %56, %66, %65 : i4
    %70 = comb.icmp eq %state_reg, %c5_i4 : i4
    %71 = comb.add %x0, %c1_i16 : i16
    %72 = comb.icmp ne %in0, %true : i1
    %73 = comb.icmp eq %state_reg, %c5_i4 : i4
    %74 = comb.icmp eq %in0, %true : i1
    %75 = comb.icmp eq %state_reg, %c5_i4 : i4
    %76 = comb.mux %75, %c5_i4, %69 : i4
    %77 = comb.mux %74, %c-5_i4, %c5_i4 : i4
    %78 = comb.and %74, %73 : i1
    %79 = comb.mux %73, %77, %76 : i4
    %80 = comb.mux %72, %c6_i4, %77 : i4
    %81 = comb.and %72, %70 : i1
    %82 = comb.mux %81, %71, %68 : i16
    %83 = comb.mux %70, %80, %79 : i4
    %84 = comb.icmp eq %state_reg, %c6_i4 : i4
    %85 = comb.add %x0, %c1_i16 : i16
    %86 = comb.icmp ne %in0, %true : i1
    %87 = comb.icmp eq %state_reg, %c6_i4 : i4
    %88 = comb.icmp eq %in0, %true : i1
    %89 = comb.icmp eq %state_reg, %c6_i4 : i4
    %90 = comb.mux %89, %c6_i4, %83 : i4
    %91 = comb.mux %88, %c-5_i4, %c6_i4 : i4
    %92 = comb.and %88, %87 : i1
    %93 = comb.mux %87, %91, %90 : i4
    %94 = comb.mux %86, %c7_i4, %91 : i4
    %95 = comb.and %86, %84 : i1
    %96 = comb.mux %95, %85, %82 : i16
    %97 = comb.mux %84, %94, %93 : i4
    %98 = comb.icmp eq %state_reg, %c7_i4 : i4
    %99 = comb.add %x0, %c1_i16 : i16
    %100 = comb.icmp ne %in0, %true : i1
    %101 = comb.icmp eq %state_reg, %c7_i4 : i4
    %102 = comb.icmp eq %in0, %true : i1
    %103 = comb.icmp eq %state_reg, %c7_i4 : i4
    %104 = comb.mux %103, %c7_i4, %97 : i4
    %105 = comb.mux %102, %c-5_i4, %c7_i4 : i4
    %106 = comb.and %102, %101 : i1
    %107 = comb.mux %101, %105, %104 : i4
    %108 = comb.mux %100, %c-8_i4, %105 : i4
    %109 = comb.and %100, %98 : i1
    %110 = comb.mux %109, %99, %96 : i16
    %111 = comb.mux %98, %108, %107 : i4
    %112 = comb.icmp eq %state_reg, %c-8_i4 : i4
    %113 = comb.add %x0, %c1_i16 : i16
    %114 = comb.icmp ne %in0, %true : i1
    %115 = comb.icmp eq %state_reg, %c-8_i4 : i4
    %116 = comb.icmp eq %in0, %true : i1
    %117 = comb.icmp eq %state_reg, %c-8_i4 : i4
    %118 = comb.mux %117, %c-8_i4, %111 : i4
    %119 = comb.mux %116, %c-5_i4, %c-8_i4 : i4
    %120 = comb.and %116, %115 : i1
    %121 = comb.mux %115, %119, %118 : i4
    %122 = comb.mux %114, %c-7_i4, %119 : i4
    %123 = comb.and %114, %112 : i1
    %124 = comb.mux %123, %113, %110 : i16
    %125 = comb.mux %112, %122, %121 : i4
    %126 = comb.icmp eq %state_reg, %c-7_i4 : i4
    %127 = comb.add %x0, %c1_i16 : i16
    %128 = comb.icmp ne %in0, %true : i1
    %129 = comb.icmp eq %state_reg, %c-7_i4 : i4
    %130 = comb.icmp eq %in0, %true : i1
    %131 = comb.icmp eq %state_reg, %c-7_i4 : i4
    %132 = comb.mux %131, %c-7_i4, %125 : i4
    %133 = comb.mux %130, %c-5_i4, %c-7_i4 : i4
    %134 = comb.and %130, %129 : i1
    %135 = comb.mux %129, %133, %132 : i4
    %136 = comb.mux %128, %c-6_i4, %133 : i4
    %137 = comb.and %128, %126 : i1
    %138 = comb.mux %137, %127, %124 : i16
    %139 = comb.mux %126, %136, %135 : i4
    %140 = comb.icmp eq %state_reg, %c-6_i4 : i4
    %141 = comb.mux %140, %c-6_i4, %139 : i4
    %142 = comb.icmp eq %state_reg, %c-5_i4 : i4
    %143 = comb.mux %142, %c-5_i4, %141 : i4
%mySpecialConstant = hw.constant 1 : i32
%time_reg = seq.compreg sym @time_reg %added, %clk : i32
%added = comb.add %time_reg, %mySpecialConstant : i32
    hw.output
}}