module {
  hw.module @fsm10(in %in0 : i1, out out0 : i1, out out1 : i1, out out2 : i1, out out3 : i1, out out4 : i1, out out5 : i1, out out6 : i1, in %clk : !seq.clock, in %rst : i1) {
    %c0_i4 = hw.constant 0 : i4
    %c1_i4 = hw.constant 1 : i4
    %c2_i4 = hw.constant 2 : i4
    %c3_i4 = hw.constant 3 : i4
    %c4_i4 = hw.constant 4 : i4
    %c5_i4 = hw.constant 5 : i4
    %c6_i4 = hw.constant 6 : i4
    %c7_i4 = hw.constant 7 : i4
    %c-8_i4 = hw.constant -8 : i4
    %c-7_i4 = hw.constant -7 : i4
    %c-6_i4 = hw.constant -6 : i4
    %c-5_i4 = hw.constant -5 : i4
    %c-4_i4 = hw.constant -4 : i4
    %c-3_i4 = hw.constant -3 : i4
    %c-2_i4 = hw.constant -2 : i4
    %c-1_i4 = hw.constant -1 : i4
    %0 = seq.initial() {
      %c0_i4_7 = hw.constant 0 : i4
      seq.yield %c0_i4_7 : i4
    } : () -> !seq.immutable<i4>
    %state_reg = seq.compreg sym @state_reg %304, %clk initial %0 : i4  
    %true = hw.constant true
    %false = hw.constant false
    %false_0 = hw.constant false
    %false_1 = hw.constant false
    %false_2 = hw.constant false
    %false_3 = hw.constant false
    %false_4 = hw.constant false
    %false_5 = hw.constant false
    %false_6 = hw.constant false
    %1 = comb.icmp eq %state_reg, %c0_i4 : i4
    %2 = comb.mux %1, %true, %false_0 : i1
    %3 = comb.mux %1, %false, %false_1 : i1
    %4 = comb.mux %1, %false, %false_2 : i1
    %5 = comb.mux %1, %false, %false_3 : i1
    %6 = comb.mux %1, %false, %false_4 : i1
    %7 = comb.mux %1, %false, %false_5 : i1
    %8 = comb.mux %1, %false, %false_6 : i1
    %9 = comb.icmp eq %state_reg, %c0_i4 : i4
    %10 = comb.icmp eq %state_reg, %c0_i4 : i4
    %11 = comb.xor %true, %in0 : i1
    %12 = comb.icmp eq %state_reg, %c0_i4 : i4
    %13 = comb.mux %12, %c0_i4, %state_reg : i4
    %14 = comb.mux %11, %c1_i4, %c0_i4 : i4
    %15 = comb.and %11, %10 : i1
    %16 = comb.mux %10, %14, %13 : i4
    %17 = comb.mux %in0, %c0_i4, %14 : i4
    %18 = comb.and %in0, %9 : i1
    %19 = comb.mux %9, %17, %16 : i4
    %20 = comb.icmp eq %state_reg, %c1_i4 : i4
    %21 = comb.mux %20, %false, %2 : i1
    %22 = comb.mux %20, %false, %3 : i1
    %23 = comb.mux %20, %false, %4 : i1
    %24 = comb.mux %20, %false, %5 : i1
    %25 = comb.mux %20, %false, %6 : i1
    %26 = comb.mux %20, %false, %7 : i1
    %27 = comb.mux %20, %false, %8 : i1
    %28 = comb.icmp eq %state_reg, %c1_i4 : i4
    %29 = comb.xor %true, %in0 : i1
    %30 = comb.icmp eq %state_reg, %c1_i4 : i4
    %31 = comb.icmp eq %state_reg, %c1_i4 : i4
    %32 = comb.mux %31, %c1_i4, %19 : i4
    %33 = comb.mux %in0, %c2_i4, %c1_i4 : i4
    %34 = comb.and %in0, %30 : i1
    %35 = comb.mux %30, %33, %32 : i4
    %36 = comb.mux %29, %c1_i4, %33 : i4
    %37 = comb.and %29, %28 : i1
    %38 = comb.mux %28, %36, %35 : i4
    %39 = comb.icmp eq %state_reg, %c2_i4 : i4
    %40 = comb.mux %39, %false, %21 : i1
    %41 = comb.mux %39, %false, %22 : i1
    %42 = comb.mux %39, %false, %23 : i1
    %43 = comb.mux %39, %false, %24 : i1
    %44 = comb.mux %39, %false, %25 : i1
    %45 = comb.mux %39, %false, %26 : i1
    %46 = comb.mux %39, %false, %27 : i1
    %47 = comb.icmp eq %state_reg, %c2_i4 : i4
    %48 = comb.xor %true, %in0 : i1
    %49 = comb.icmp eq %state_reg, %c2_i4 : i4
    %50 = comb.icmp eq %state_reg, %c2_i4 : i4
    %51 = comb.mux %50, %c2_i4, %38 : i4
    %52 = comb.mux %in0, %c-7_i4, %c2_i4 : i4
    %53 = comb.and %in0, %49 : i1
    %54 = comb.mux %49, %52, %51 : i4
    %55 = comb.mux %48, %c3_i4, %52 : i4
    %56 = comb.and %48, %47 : i1
    %57 = comb.mux %47, %55, %54 : i4
    %58 = comb.icmp eq %state_reg, %c3_i4 : i4
    %59 = comb.mux %58, %false, %40 : i1
    %60 = comb.mux %58, %true, %41 : i1
    %61 = comb.mux %58, %false, %42 : i1
    %62 = comb.mux %58, %false, %43 : i1
    %63 = comb.mux %58, %false, %44 : i1
    %64 = comb.mux %58, %false, %45 : i1
    %65 = comb.mux %58, %false, %46 : i1
    %66 = comb.icmp eq %state_reg, %c3_i4 : i4
    %67 = comb.xor %true, %in0 : i1
    %68 = comb.icmp eq %state_reg, %c3_i4 : i4
    %69 = comb.icmp eq %state_reg, %c3_i4 : i4
    %70 = comb.mux %69, %c3_i4, %57 : i4
    %71 = comb.mux %in0, %c5_i4, %c3_i4 : i4
    %72 = comb.and %in0, %68 : i1
    %73 = comb.mux %68, %71, %70 : i4
    %74 = comb.mux %67, %c4_i4, %71 : i4
    %75 = comb.and %67, %66 : i1
    %76 = comb.mux %66, %74, %73 : i4
    %77 = comb.icmp eq %state_reg, %c4_i4 : i4
    %78 = comb.mux %77, %false, %59 : i1
    %79 = comb.mux %77, %false, %60 : i1
    %80 = comb.mux %77, %true, %61 : i1
    %81 = comb.mux %77, %false, %62 : i1
    %82 = comb.mux %77, %false, %63 : i1
    %83 = comb.mux %77, %false, %64 : i1
    %84 = comb.mux %77, %false, %65 : i1
    %85 = comb.icmp eq %state_reg, %c4_i4 : i4
    %86 = comb.xor %true, %in0 : i1
    %87 = comb.icmp eq %state_reg, %c4_i4 : i4
    %88 = comb.icmp eq %state_reg, %c4_i4 : i4
    %89 = comb.mux %88, %c4_i4, %76 : i4
    %90 = comb.mux %in0, %c5_i4, %c4_i4 : i4
    %91 = comb.and %in0, %87 : i1
    %92 = comb.mux %87, %90, %89 : i4
    %93 = comb.mux %86, %c4_i4, %90 : i4
    %94 = comb.and %86, %85 : i1
    %95 = comb.mux %85, %93, %92 : i4
    %96 = comb.icmp eq %state_reg, %c5_i4 : i4
    %97 = comb.mux %96, %false, %78 : i1
    %98 = comb.mux %96, %false, %79 : i1
    %99 = comb.mux %96, %false, %80 : i1
    %100 = comb.mux %96, %false, %81 : i1
    %101 = comb.mux %96, %false, %82 : i1
    %102 = comb.mux %96, %false, %83 : i1
    %103 = comb.mux %96, %false, %84 : i1
    %104 = comb.icmp eq %state_reg, %c5_i4 : i4
    %105 = comb.xor %true, %in0 : i1
    %106 = comb.icmp eq %state_reg, %c5_i4 : i4
    %107 = comb.icmp eq %state_reg, %c5_i4 : i4
    %108 = comb.mux %107, %c5_i4, %95 : i4
    %109 = comb.mux %in0, %c-8_i4, %c5_i4 : i4
    %110 = comb.and %in0, %106 : i1
    %111 = comb.mux %106, %109, %108 : i4
    %112 = comb.mux %105, %c6_i4, %109 : i4
    %113 = comb.and %105, %104 : i1
    %114 = comb.mux %104, %112, %111 : i4
    %115 = comb.icmp eq %state_reg, %c6_i4 : i4
    %116 = comb.mux %115, %false, %97 : i1
    %117 = comb.mux %115, %false, %98 : i1
    %118 = comb.mux %115, %false, %99 : i1
    %119 = comb.mux %115, %false, %100 : i1
    %120 = comb.mux %115, %false, %101 : i1
    %121 = comb.mux %115, %false, %102 : i1
    %122 = comb.mux %115, %false, %103 : i1
    %123 = comb.icmp eq %state_reg, %c6_i4 : i4
    %124 = comb.xor %true, %in0 : i1
    %125 = comb.icmp eq %state_reg, %c6_i4 : i4
    %126 = comb.icmp eq %state_reg, %c6_i4 : i4
    %127 = comb.mux %126, %c6_i4, %114 : i4
    %128 = comb.mux %in0, %c7_i4, %c6_i4 : i4
    %129 = comb.and %in0, %125 : i1
    %130 = comb.mux %125, %128, %127 : i4
    %131 = comb.mux %124, %c6_i4, %128 : i4
    %132 = comb.and %124, %123 : i1
    %133 = comb.mux %123, %131, %130 : i4
    %134 = comb.icmp eq %state_reg, %c7_i4 : i4
    %135 = comb.mux %134, %false, %116 : i1
    %136 = comb.mux %134, %false, %117 : i1
    %137 = comb.mux %134, %false, %118 : i1
    %138 = comb.mux %134, %false, %119 : i1
    %139 = comb.mux %134, %false, %120 : i1
    %140 = comb.mux %134, %false, %121 : i1
    %141 = comb.mux %134, %false, %122 : i1
    %142 = comb.icmp eq %state_reg, %c7_i4 : i4
    %143 = comb.xor %true, %in0 : i1
    %144 = comb.icmp eq %state_reg, %c7_i4 : i4
    %145 = comb.icmp eq %state_reg, %c7_i4 : i4
    %146 = comb.mux %145, %c7_i4, %133 : i4
    %147 = comb.mux %in0, %c-8_i4, %c7_i4 : i4
    %148 = comb.and %in0, %144 : i1
    %149 = comb.mux %144, %147, %146 : i4
    %150 = comb.mux %143, %c4_i4, %147 : i4
    %151 = comb.and %143, %142 : i1
    %152 = comb.mux %142, %150, %149 : i4
    %153 = comb.icmp eq %state_reg, %c-8_i4 : i4
    %154 = comb.mux %153, %false, %135 : i1
    %155 = comb.mux %153, %false, %136 : i1
    %156 = comb.mux %153, %false, %137 : i1
    %157 = comb.mux %153, %true, %138 : i1
    %158 = comb.mux %153, %false, %139 : i1
    %159 = comb.mux %153, %false, %140 : i1
    %160 = comb.mux %153, %false, %141 : i1
    %161 = comb.icmp eq %state_reg, %c-8_i4 : i4
    %162 = comb.xor %true, %in0 : i1
    %163 = comb.icmp eq %state_reg, %c-8_i4 : i4
    %164 = comb.icmp eq %state_reg, %c-8_i4 : i4
    %165 = comb.mux %164, %c-8_i4, %152 : i4
    %166 = comb.mux %in0, %c2_i4, %c-8_i4 : i4
    %167 = comb.and %in0, %163 : i1
    %168 = comb.mux %163, %166, %165 : i4
    %169 = comb.mux %162, %c1_i4, %166 : i4
    %170 = comb.and %162, %161 : i1
    %171 = comb.mux %161, %169, %168 : i4
    %172 = comb.icmp eq %state_reg, %c-7_i4 : i4
    %173 = comb.mux %172, %false, %154 : i1
    %174 = comb.mux %172, %false, %155 : i1
    %175 = comb.mux %172, %false, %156 : i1
    %176 = comb.mux %172, %false, %157 : i1
    %177 = comb.mux %172, %false, %158 : i1
    %178 = comb.mux %172, %false, %159 : i1
    %179 = comb.mux %172, %false, %160 : i1
    %180 = comb.icmp eq %state_reg, %c-7_i4 : i4
    %181 = comb.xor %true, %in0 : i1
    %182 = comb.icmp eq %state_reg, %c-7_i4 : i4
    %183 = comb.icmp eq %state_reg, %c-7_i4 : i4
    %184 = comb.mux %183, %c-7_i4, %171 : i4
    %185 = comb.mux %in0, %c0_i4, %c-7_i4 : i4
    %186 = comb.and %in0, %182 : i1
    %187 = comb.mux %182, %185, %184 : i4
    %188 = comb.mux %181, %c-6_i4, %185 : i4
    %189 = comb.and %181, %180 : i1
    %190 = comb.mux %180, %188, %187 : i4
    %191 = comb.icmp eq %state_reg, %c-6_i4 : i4
    %192 = comb.mux %191, %false, %173 : i1
    %193 = comb.mux %191, %false, %174 : i1
    %194 = comb.mux %191, %false, %175 : i1
    %195 = comb.mux %191, %false, %176 : i1
    %196 = comb.mux %191, %true, %177 : i1
    %197 = comb.mux %191, %false, %178 : i1
    %198 = comb.mux %191, %false, %179 : i1
    %199 = comb.icmp eq %state_reg, %c-6_i4 : i4
    %200 = comb.xor %true, %in0 : i1
    %201 = comb.icmp eq %state_reg, %c-6_i4 : i4
    %202 = comb.icmp eq %state_reg, %c-6_i4 : i4
    %203 = comb.mux %202, %c-6_i4, %190 : i4
    %204 = comb.mux %in0, %c-4_i4, %c-6_i4 : i4
    %205 = comb.and %in0, %201 : i1
    %206 = comb.mux %201, %204, %203 : i4
    %207 = comb.mux %200, %c-5_i4, %204 : i4
    %208 = comb.and %200, %199 : i1
    %209 = comb.mux %199, %207, %206 : i4
    %210 = comb.icmp eq %state_reg, %c-5_i4 : i4
    %211 = comb.mux %210, %false, %192 : i1
    %212 = comb.mux %210, %false, %193 : i1
    %213 = comb.mux %210, %false, %194 : i1
    %214 = comb.mux %210, %false, %195 : i1
    %215 = comb.mux %210, %false, %196 : i1
    %216 = comb.mux %210, %true, %197 : i1
    %217 = comb.mux %210, %false, %198 : i1
    %218 = comb.icmp eq %state_reg, %c-5_i4 : i4
    %219 = comb.xor %true, %in0 : i1
    %220 = comb.icmp eq %state_reg, %c-5_i4 : i4
    %221 = comb.icmp eq %state_reg, %c-5_i4 : i4
    %222 = comb.mux %221, %c-5_i4, %209 : i4
    %223 = comb.mux %in0, %c-4_i4, %c-5_i4 : i4
    %224 = comb.and %in0, %220 : i1
    %225 = comb.mux %220, %223, %222 : i4
    %226 = comb.mux %219, %c-5_i4, %223 : i4
    %227 = comb.and %219, %218 : i1
    %228 = comb.mux %218, %226, %225 : i4
    %229 = comb.icmp eq %state_reg, %c-4_i4 : i4
    %230 = comb.mux %229, %false, %211 : i1
    %231 = comb.mux %229, %false, %212 : i1
    %232 = comb.mux %229, %false, %213 : i1
    %233 = comb.mux %229, %false, %214 : i1
    %234 = comb.mux %229, %false, %215 : i1
    %235 = comb.mux %229, %false, %216 : i1
    %236 = comb.mux %229, %false, %217 : i1
    %237 = comb.icmp eq %state_reg, %c-4_i4 : i4
    %238 = comb.xor %true, %in0 : i1
    %239 = comb.icmp eq %state_reg, %c-4_i4 : i4
    %240 = comb.icmp eq %state_reg, %c-4_i4 : i4
    %241 = comb.mux %240, %c-4_i4, %228 : i4
    %242 = comb.mux %in0, %c-1_i4, %c-4_i4 : i4
    %243 = comb.and %in0, %239 : i1
    %244 = comb.mux %239, %242, %241 : i4
    %245 = comb.mux %238, %c-3_i4, %242 : i4
    %246 = comb.and %238, %237 : i1
    %247 = comb.mux %237, %245, %244 : i4
    %248 = comb.icmp eq %state_reg, %c-3_i4 : i4
    %249 = comb.mux %248, %false, %230 : i1
    %250 = comb.mux %248, %false, %231 : i1
    %251 = comb.mux %248, %false, %232 : i1
    %252 = comb.mux %248, %false, %233 : i1
    %253 = comb.mux %248, %false, %234 : i1
    %254 = comb.mux %248, %false, %235 : i1
    %255 = comb.mux %248, %false, %236 : i1
    %256 = comb.icmp eq %state_reg, %c-3_i4 : i4
    %257 = comb.xor %true, %in0 : i1
    %258 = comb.icmp eq %state_reg, %c-3_i4 : i4
    %259 = comb.icmp eq %state_reg, %c-3_i4 : i4
    %260 = comb.mux %259, %c-3_i4, %247 : i4
    %261 = comb.mux %in0, %c-2_i4, %c-3_i4 : i4
    %262 = comb.and %in0, %258 : i1
    %263 = comb.mux %258, %261, %260 : i4
    %264 = comb.mux %257, %c-3_i4, %261 : i4
    %265 = comb.and %257, %256 : i1
    %266 = comb.mux %256, %264, %263 : i4
    %267 = comb.icmp eq %state_reg, %c-2_i4 : i4
    %268 = comb.mux %267, %false, %249 : i1
    %269 = comb.mux %267, %false, %250 : i1
    %270 = comb.mux %267, %false, %251 : i1
    %271 = comb.mux %267, %false, %252 : i1
    %272 = comb.mux %267, %false, %253 : i1
    %273 = comb.mux %267, %false, %254 : i1
    %274 = comb.mux %267, %false, %255 : i1
    %275 = comb.icmp eq %state_reg, %c-2_i4 : i4
    %276 = comb.xor %true, %in0 : i1
    %277 = comb.icmp eq %state_reg, %c-2_i4 : i4
    %278 = comb.icmp eq %state_reg, %c-2_i4 : i4
    %279 = comb.mux %278, %c-2_i4, %266 : i4
    %280 = comb.mux %in0, %c-1_i4, %c-2_i4 : i4
    %281 = comb.and %in0, %277 : i1
    %282 = comb.mux %277, %280, %279 : i4
    %283 = comb.mux %276, %c-5_i4, %280 : i4
    %284 = comb.and %276, %275 : i1
    %285 = comb.mux %275, %283, %282 : i4
    %286 = comb.icmp eq %state_reg, %c-1_i4 : i4
    %287 = comb.mux %286, %false, %268 : i1
    %288 = comb.mux %286, %false, %269 : i1
    %289 = comb.mux %286, %false, %270 : i1
    %290 = comb.mux %286, %false, %271 : i1
    %291 = comb.mux %286, %false, %272 : i1
    %292 = comb.mux %286, %false, %273 : i1
    %293 = comb.mux %286, %true, %274 : i1
    %294 = comb.icmp eq %state_reg, %c-1_i4 : i4
    %295 = comb.xor %true, %in0 : i1
    %296 = comb.icmp eq %state_reg, %c-1_i4 : i4
    %297 = comb.icmp eq %state_reg, %c-1_i4 : i4
    %298 = comb.mux %297, %c-1_i4, %285 : i4
    %299 = comb.mux %in0, %c-7_i4, %c-1_i4 : i4
    %300 = comb.and %in0, %296 : i1
    %301 = comb.mux %296, %299, %298 : i4
    %302 = comb.mux %295, %c1_i4, %299 : i4
    %303 = comb.and %295, %294 : i1
    %304 = comb.mux %294, %302, %301 : i4
    %timer_init = seq.initial() {
%c0_i16_0_in = hw.constant 0 : i32
seq.yield %c0_i16_0_in : i32
} : () -> !seq.immutable<i32>
%mySpecialConstant = hw.constant 1 : i32
%time_reg = seq.compreg sym @time_reg %added, %clk initial %timer_init : i32
%added = comb.add %time_reg, %mySpecialConstant : i32
    hw.output %287, %288, %289, %290, %291, %292, %293 : i1, i1, i1, i1, i1, i1, i1
}}